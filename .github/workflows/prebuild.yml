name: Prebuild Binaries

on:
  push:
    tags:        
      - v*

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          prerelease: true

  prebuild-posix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    name: Prebuild ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    needs: create_release
    steps:
      - if: matrix.os == 'ubuntu-latest'
        name: Install Linux Toolchain
        run: sudo apt-get install g++-multilib
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Set TAG
        run: echo ::set-env name=TAG::${GITHUB_REF#refs/tags/}
      - name: Set FILENAME # must run after Set TAG
        run: echo ::set-env name=FILENAME::${TAG}-${{ runner.os }}.tar
      - name: Install
        run: npm install
      - name: Prebuild 64-bit
        run: npm run prebuild
      - if: matrix.os == 'ubuntu-latest'
        name: Prebuild 32-bit
        run: PREBUILD_ARCH=ia32 npm run prebuild
      - name: Archive Prebuilds
        run: tar --create --verbose --file=${FILENAME} --directory ./prebuilds .
      - name: Upload to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ env.FILENAME }}
          asset_name: ${{ env.FILENAME }}
          asset_content_type: application/tar

  prebuild-windows:
    name: Prebuild windows-latest
    runs-on: windows-latest
    timeout-minutes: 10
    needs: create_release
    steps:
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Set TAG
        run: echo ::set-env name=TAG::${GITHUB_REF#refs/tags/}
        shell: bash
      - name: Set FILENAME # must run after Set TAG
        run: echo ::set-env name=FILENAME::${{ env.TAG }}-${{ runner.os }}.zip
        shell: bash
      - name: Install
        run: npm install
      - name: Prebuild 64-bit
        run: npm run prebuild
      - name: Archive Prebuilds
        run: Compress-Archive -Path ./prebuilds -DestinationPath ./%FILENAME%
      - name: Upload to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ env.FILENAME }}
          asset_name: ${{ env.FILENAME }}
          asset_content_type: application/zip
